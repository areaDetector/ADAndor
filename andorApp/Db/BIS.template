# Database for the records specific to the BIS driver
# Jeff Gebhardt and Mark Rivers

# Timeout waiting for SFRM file.
record(ao, "$(P)$(R)ReadSFRMTimeout")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SFRM_TIMEOUT")
    field(DESC, "Timeout for SFRM file")
    field(VAL,  "30")
    field(EGU,  "s")
    field(PREC, "3")
}

# Status string from BIS
record(waveform, "$(P)$(R)BISStatus")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BIS_STATUS")
    field(FTVL, "CHAR")
    field(NELM, "512")
    field(SCAN, "I/O Intr")
}

# Number of dark fields
record(longout, "$(P)$(R)NumDarks")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NUM_DARKS")
   field(VAL,  "2")
}

record(longin, "$(P)$(R)NumDarks_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NUM_DARKS")
   field(SCAN, "I/O Intr")
}


# We replace the file format choices from ADBase.template
record(mbbo, "$(P)$(R)FileFormat")
{
    field(ZRST, "SRFM")
    field(ZRVL, "0")
    field(ONST, "Invalid")
    field(ONVL, "1")
}

record(mbbi, "$(P)$(R)FileFormat_RBV")
{
    field(ZRST, "SRFM")
    field(ZRVL, "0")
    field(ONST, "Invalid")
    field(ONVL, "1")
    field(SCAN, "I/O Intr")
}

# We replace the choice fields for FrameType from ADBase.template
record(mbbo, "$(P)$(R)FrameType")
{
   field(ZRST, "Normal")
   field(ZRVL, "0")
   field(ONST, "Dark")
   field(ONVL, "1")
   field(TWST, "Raw")
   field(TWVL, "2")
   field(THST, "DblCorrelation")
   field(THVL, "3")
}

record(mbbi, "$(P)$(R)FrameType_RBV")
{
   field(ZRST, "Normal")
   field(ZRVL, "0")
   field(ONST, "Dark")
   field(ONVL, "1")
   field(TWST, "Raw")
   field(TWVL, "2")
   field(THST, "DblCorrelation")
   field(THVL, "3")
   field(SCAN, "I/O Intr")
}

# Change the PREC of the temperature and time remaining records to 2
record(ai, "$(P)$(R)Temperature_RBV")
{
   field(PREC, "2")
}

record(ai, "$(P)$(R)TimeRemaining_RBV")
{
   field(PREC, "2")
}

# asyn record for interactive communication with BIS
record(asyn, "$(P)$(R)BISAsyn")
{
    field(PORT,  "$(BIS_PORT)")
    field(IMAX, "256")
    field(OMAX, "256")
}
